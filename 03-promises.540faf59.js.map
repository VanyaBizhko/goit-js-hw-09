{"mappings":"AAAA,MAAMA,EAAOC,SAASC,cAAc,SAmBpC,SAASC,EAAcC,EAAUC,GACjC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC7B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACPH,EACJF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAExBA,EAAM,G,CA1BTL,EAAKa,iBAAiB,UAAWC,IACjCA,EAAMC,iBACN,MAAMC,EAAQC,SAASjB,EAAKkB,SAASb,MAAMc,OACrCC,EAAOH,SAASjB,EAAKkB,SAASE,KAAKD,OACnCE,EAASJ,SAASjB,EAAKkB,SAASG,OAAOF,OAE7C,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAQC,IAC5BnB,EAAcmB,EAAGN,EAAQM,EAAIF,GAC5BG,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MACnBmB,QAAQC,IAAI,uBAAqBrB,QAAiBC,MAAU,IAE3DqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MACpBmB,QAAQC,IAAI,sBAAoBrB,QAAeC,MAAU,GACvD","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\n\nform.addEventListener('submit', (event) => {\nevent.preventDefault(); \nconst delay = parseInt(form.elements.delay.value);\nconst step = parseInt(form.elements.step.value);\nconst amount = parseInt(form.elements.amount.value);\n\nfor (let i = 0; i < amount; i++) {\ncreatePromise(i, delay + i * step)\n.then(({ position, delay }) => {\nconsole.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n})\n.catch(({ position, delay }) => {\nconsole.log(`❌ Rejected promise ${position} in ${delay}ms`);\n});\n}\n});\n\nfunction createPromise(position, delay) {\nreturn new Promise((resolve, reject) => {\nconst shouldResolve = Math.random() > 0.3;\nsetTimeout(() => {\nif (shouldResolve) {\nresolve({ position, delay });\n} else {\nreject({ position, delay });\n}\n}, delay);\n});\n}"],"names":["$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","delay1","parseInt","elements","value","step","amount","i","then","console","log","catch"],"version":3,"file":"03-promises.540faf59.js.map"}